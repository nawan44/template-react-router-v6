{"ast":null,"code":"var _jsxFileName = \"/home/rachmat/Documents/Kledo/kledo-assesment/src/page/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleLoginForm = evt => {\n    evt.preventDefault();\n    setErrors(errors => ({ ...validateCredentials(credentials)\n    }));\n  };\n\n  const validateCredentials = credentials => {\n    let errors = {};\n\n    if (credentials.username === '') {\n      errors = Object.assign(errors, {\n        username: 'This field is required'\n      });\n    }\n\n    if (credentials.password === '') {\n      errors = Object.assign(errors, {\n        password: 'This field is required'\n      });\n    }\n\n    return errors;\n  };\n\n  const handleInputChange = evt => {\n    evt.persist();\n    setCredentials(credentials => ({ ...credentials,\n      [evt.target.name]: evt.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"flex flex-wrap w-full\",\n    onSubmit: handleLoginForm.bind(this),\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"pl-6 pr-3 w-1/2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        htmlFor: \"username\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        className: 'border mb-2 py-2 px-3 rounded text-gray-700 w-full focus:bg-primary ' + (errors.hasOwnProperty('username') ? \"border-red-500\" : ''),\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"e.g. some.example\",\n        value: credentials.username,\n        onChange: handleInputChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), errors.hasOwnProperty('username') && /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"text-red-500 text-xs italic\",\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"pl-3 pr-6 w-1/2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        className: 'border mb-2 py-2 px-3 rounded text-gray-700 w-full focus:bg-primary ' + (errors.hasOwnProperty('password') ? \"border-red-500\" : ''),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"* * * * * * * *\",\n        value: credentials.password,\n        onChange: handleInputChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), errors.hasOwnProperty('username') && /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"text-red-500 text-xs italic\",\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex justify-end px-6 mt-3 w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:border-none\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Login, \"nCMSqPJRYtZS5Ao9wnyBML8Ayno=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/rachmat/Documents/Kledo/kledo-assesment/src/page/Login/index.js"],"names":["React","useState","useEffect","Login","props","credentials","setCredentials","username","password","errors","setErrors","handleLoginForm","evt","preventDefault","validateCredentials","Object","assign","handleInputChange","persist","target","name","value","bind","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nconst Login = (props) => {\n    const [credentials, setCredentials] = useState({ username: '', password: '' });\n    const [errors, setErrors] = useState({});\n  \n    const handleLoginForm = (evt) => {\n      evt.preventDefault();\n  \n      setErrors(errors => ({ ...validateCredentials(credentials) }));\n    };\n  \n    const validateCredentials = (credentials) => {\n      let errors = {};\n  \n      if (credentials.username === '') {\n        errors = Object.assign(errors, {\n          username: 'This field is required',\n        });\n      }\n  \n      if (credentials.password === '') {\n        errors = Object.assign(errors, {\n          password: 'This field is required',\n        });\n      }\n  \n      return errors;\n    }\n  \n    const handleInputChange = (evt) => {\n      evt.persist()\n      setCredentials(credentials => ({ ...credentials, [evt.target.name]: evt.target.value }));\n    }\n  \n    return (\n      <form className=\"flex flex-wrap w-full\" onSubmit={handleLoginForm.bind(this)}>\n        <section className=\"pl-6 pr-3 w-1/2\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n            Email\n        </label>\n          <input\n            id=\"username\"\n            className={'border mb-2 py-2 px-3 rounded text-gray-700 w-full focus:bg-primary ' + (errors.hasOwnProperty('username') ? \"border-red-500\" : '')}\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"e.g. some.example\"\n            value={credentials.username}\n            onChange={handleInputChange.bind(this)}\n          />\n          {errors.hasOwnProperty('username') &&\n            <p class=\"text-red-500 text-xs italic\">{errors.username}</p>\n          }\n        </section>\n        <section className=\"pl-3 pr-6 w-1/2\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n            Password\n        </label>\n          <input\n            id=\"password\"\n            className={'border mb-2 py-2 px-3 rounded text-gray-700 w-full focus:bg-primary ' + (errors.hasOwnProperty('password') ? \"border-red-500\" : '')}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"* * * * * * * *\"\n            value={credentials.password}\n            onChange={handleInputChange.bind(this)}\n          />\n          {errors.hasOwnProperty('username') &&\n            <p class=\"text-red-500 text-xs italic\">{errors.username}</p>\n          }\n        </section>\n        <section className=\"flex justify-end px-6 mt-3 w-full\">\n          <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:border-none\">\n            Sign in\n        </button>\n        </section>\n      </form>\n    );\n  }\nexport default Login\n\n\n\n"]},"metadata":{},"sourceType":"module"}